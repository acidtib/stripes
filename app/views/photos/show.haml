- content_for :title, (@photo.title ? "#{@photo.title}" : "#{@photo.user.username}'s photo") + " - Stripes"

#photo{"data-media-id" => @photo.id}

  #sidebar
    #general
      #profile
        %img{:src => @photo.user.profile_picture_url, :alt => "#{@photo.user.username}'s portrait"}
        
        %h3<
          = link_to @photo.user.username, profile_url(@photo.user.username), { :title => "Link to #{@photo.user.username}'s profile" }
        - unless @photo.user.full_name.empty?
          %h4<
            =@photo.user.full_name
        - unless @photo.user.bio.empty?
          %p.meta<
            =@photo.user.bio
        - unless @photo.user.website.empty?
          %p
            %a{:href => @photo.user.website}<
              =@photo.user.website
      
      #details
        -if @photo.title
          %p.caption<
            = raw("&laquo;#{@photo.title}&raquo;")
            
        -if @photo.location
          =render_location_image @photo.location.latitude, @photo.location.longitude
          
        %p.meta.sherlock
          =raw("This shot was created #{time_ago_in_words(@photo.created_at)} ago with filter #{@photo.filter}.")

      %ul.pages#pages
        %li.likes#likes-link{:class => ("disabled" if @photo.likes_count == 0)}
          = pluralize(@photo.likes_count, "like", "likes")
        %li.comments#comments-link{:class => ("disabled" if @photo.comments_count == 0)}
          = pluralize(@photo.comments_count, "comment", "comments")

      %ul.actions
        %li
          - unless @photo.liked
            %span.like#action-like
          - else
            %span.like.toggled#action-like
          
    #likes
      .navbar<
        %span Back
        ="#{@photo.likes_count} likes for this shot"
      %ul
        - unless @lazy_load_likes
          = render :partial => "like", :collection => @likes_users, :as => :user
        - else
          %li#likes_placeholder.placeholder
            Loading all those likes...
  
    #comments
      .navbar<
        %span Back
        ="#{@photo.comments_count} comments"
      %ul
        - unless @lazy_load_comments
          = render :partial => "comment", :collection => @comments
        - else
          %li.placeholder#comments_placeholder
            Loading all those comments...
      #comments-form
        %textarea.comment{ :placeholder => "Anything cool to say?", :maxlength => "200" }
        %span.action-post-comment#action-post-comment Post comment
        %img#comment-preloader.hidden{ :src => "/assets/actions/spinners/comment.gif" }
        %span.counter
          %span#characters-counter 0
          = " / 200"
          
  %img{:src => @photo.image.large.url, :alt => "#{@photo.user.username}'s photo"}